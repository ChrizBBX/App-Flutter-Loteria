// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Numerito.API.Data;

#nullable disable

namespace Numerito.API.Migrations
{
    [DbContext(typeof(NumeritoContext))]
    [Migration("20240121162829_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Numerito.API.Data.Entities.Departamento", b =>
                {
                    b.Property<int>("DepartamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartamentoId"));

                    b.Property<string>("DepartamentoDescripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int>("UsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificacion")
                        .HasColumnType("int");

                    b.HasKey("DepartamentoId")
                        .HasName("PK_Departamentos_DepartamentoId");

                    b.HasIndex(new[] { "DepartamentoDescripcion" }, "UQ_Departamentos_DepartamentoDescripcion")
                        .IsUnique();

                    b.ToTable("Departamentos", (string)null);
                });

            modelBuilder.Entity("Numerito.API.Data.Entities.Membresia", b =>
                {
                    b.Property<int>("MembresiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MembresiaId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<bool?>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("UsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificacion")
                        .HasColumnType("int");

                    b.HasKey("MembresiaId")
                        .HasName("PK_Membresias_MembresiaId");

                    b.HasIndex("UsuarioCreacion");

                    b.HasIndex("UsuarioModificacion");

                    b.ToTable("Membresias", (string)null);
                });

            modelBuilder.Entity("Numerito.API.Data.Entities.MetodosPago", b =>
                {
                    b.Property<int>("MetodoPagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MetodoPagoId"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int>("UsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificacion")
                        .HasColumnType("int");

                    b.HasKey("MetodoPagoId")
                        .HasName("PK_MetodosPago_MetodoPagoId");

                    b.HasIndex("UsuarioCreacion");

                    b.HasIndex("UsuarioModificacion");

                    b.HasIndex(new[] { "Descripcion" }, "UQ_MetodosPago_Descripcion")
                        .IsUnique()
                        .HasFilter("[Descripcion] IS NOT NULL");

                    b.ToTable("MetodosPago", (string)null);
                });

            modelBuilder.Entity("Numerito.API.Data.Entities.Municipio", b =>
                {
                    b.Property<int>("MunicipioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MunicipioId"));

                    b.Property<bool?>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("MunicipioDescripcion")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<int>("UsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificacion")
                        .HasColumnType("int");

                    b.HasKey("MunicipioId")
                        .HasName("PK_Municipios_MunicipioId");

                    b.HasIndex(new[] { "MunicipioDescripcion" }, "UQ_Municipios_MunicipioDescripcion")
                        .IsUnique()
                        .HasFilter("[MunicipioDescripcion] IS NOT NULL");

                    b.ToTable("Municipios", (string)null);
                });

            modelBuilder.Entity("Numerito.API.Data.Entities.Numero", b =>
                {
                    b.Property<int>("NumeroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NumeroId"));

                    b.Property<bool?>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int?>("Limite")
                        .HasColumnType("int");

                    b.Property<int>("Numero1")
                        .HasColumnType("int")
                        .HasColumnName("Numero");

                    b.Property<string>("NumeroDescripcion")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("UsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificacion")
                        .HasColumnType("int");

                    b.HasKey("NumeroId")
                        .HasName("PK_Numeros_NumeroId");

                    b.HasIndex(new[] { "Numero1" }, "UQ_Numeros_Numero")
                        .IsUnique();

                    b.ToTable("Numeros", (string)null);
                });

            modelBuilder.Entity("Numerito.API.Data.Entities.Pago", b =>
                {
                    b.Property<int>("PagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PagoId"));

                    b.Property<bool?>("AutoRenovable")
                        .HasColumnType("bit");

                    b.Property<bool?>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime");

                    b.Property<int>("MembresiaId")
                        .HasColumnType("int");

                    b.Property<int>("MetodoPagoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificacion")
                        .HasColumnType("int");

                    b.HasKey("PagoId")
                        .HasName("PK_Pagos_PagoId");

                    b.HasIndex("MembresiaId");

                    b.HasIndex("MetodoPagoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Pagos", (string)null);
                });

            modelBuilder.Entity("Numerito.API.Data.Entities.Persona", b =>
                {
                    b.Property<int>("PersonaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonaId"));

                    b.Property<string>("Apellidos")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CorreoElectronico")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool?>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("Identidad")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)");

                    b.Property<string>("Nombres")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<int>("UsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificacion")
                        .HasColumnType("int");

                    b.HasKey("PersonaId")
                        .HasName("PK_Personas_PersonaId");

                    b.HasIndex(new[] { "Identidad" }, "UQ_Personas_Identidad")
                        .IsUnique()
                        .HasFilter("[Identidad] IS NOT NULL");

                    b.ToTable("Personas", (string)null);
                });

            modelBuilder.Entity("Numerito.API.Data.Entities.Sucursal", b =>
                {
                    b.Property<int>("SucursalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SucursalId"));

                    b.Property<bool?>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("SucursalDescripcion")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("UsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificacion")
                        .HasColumnType("int");

                    b.HasKey("SucursalId")
                        .HasName("PK_Sucursales_NumeroId");

                    b.HasIndex(new[] { "SucursalDescripcion" }, "UQ_Sucursales_SucursalDescripcion")
                        .IsUnique()
                        .HasFilter("[SucursalDescripcion] IS NOT NULL");

                    b.ToTable("Sucursales", (string)null);
                });

            modelBuilder.Entity("Numerito.API.Data.Entities.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<bool?>("Admin")
                        .HasColumnType("bit");

                    b.Property<string>("Contrasena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificacion")
                        .HasColumnType("int");

                    b.HasKey("UsuarioId")
                        .HasName("PK_Usuarios_usuarioId");

                    b.HasIndex("PersonaId");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("Numerito.API.Data.Entities.Venta", b =>
                {
                    b.Property<int>("VentaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VentaId"));

                    b.Property<bool?>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaVenta")
                        .HasColumnType("datetime");

                    b.Property<int>("MetodoPagoId")
                        .HasColumnType("int");

                    b.Property<string>("NumeroVenta")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioModificacion")
                        .HasColumnType("int");

                    b.HasKey("VentaId")
                        .HasName("PK_Ventas_VentaId");

                    b.HasIndex("MetodoPagoId");

                    b.HasIndex("PersonaId");

                    b.HasIndex("UsuarioCreacion");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("UsuarioModificacion");

                    b.HasIndex(new[] { "NumeroVenta" }, "UQ_Ventas_NumeroVenta")
                        .IsUnique();

                    b.ToTable("Ventas", (string)null);
                });

            modelBuilder.Entity("Numerito.API.Data.Entities.VentaDetalle", b =>
                {
                    b.Property<int>("VentaDetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VentaDetalleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VentaDetalleId"));

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<int>("VentaId")
                        .HasColumnType("int");

                    b.HasKey("VentaDetalleId")
                        .HasName("PK_VentaDetalles_VentaDetalleID");

                    b.HasIndex("VentaId");

                    b.ToTable("VentaDetalles", (string)null);
                });

            modelBuilder.Entity("Numerito.API.Data.Entities.Membresia", b =>
                {
                    b.HasOne("Numerito.API.Data.Entities.Usuario", "UsuarioCreacionNavigation")
                        .WithMany("MembresiaUsuarioCreacionNavigations")
                        .HasForeignKey("UsuarioCreacion")
                        .IsRequired()
                        .HasConstraintName("FK_Membresias_UsuarioCreacion_Usuarios_UsuarioId");

                    b.HasOne("Numerito.API.Data.Entities.Usuario", "UsuarioModificacionNavigation")
                        .WithMany("MembresiaUsuarioModificacionNavigations")
                        .HasForeignKey("UsuarioModificacion")
                        .HasConstraintName("FK_Membresias_UsuarioModificacionn_Usuarios_UsuarioId");

                    b.Navigation("UsuarioCreacionNavigation");

                    b.Navigation("UsuarioModificacionNavigation");
                });

            modelBuilder.Entity("Numerito.API.Data.Entities.MetodosPago", b =>
                {
                    b.HasOne("Numerito.API.Data.Entities.Usuario", "UsuarioCreacionNavigation")
                        .WithMany("MetodosPagoUsuarioCreacionNavigations")
                        .HasForeignKey("UsuarioCreacion")
                        .IsRequired()
                        .HasConstraintName("FK_MetodosPago_UsuarioCreacion_Usuarios_UsuarioId");

                    b.HasOne("Numerito.API.Data.Entities.Usuario", "UsuarioModificacionNavigation")
                        .WithMany("MetodosPagoUsuarioModificacionNavigations")
                        .HasForeignKey("UsuarioModificacion")
                        .HasConstraintName("FK_MetodosPago_UsuarioModificacion_Usuarios_UsuarioId");

                    b.Navigation("UsuarioCreacionNavigation");

                    b.Navigation("UsuarioModificacionNavigation");
                });

            modelBuilder.Entity("Numerito.API.Data.Entities.Pago", b =>
                {
                    b.HasOne("Numerito.API.Data.Entities.Membresia", "Membresia")
                        .WithMany("Pagos")
                        .HasForeignKey("MembresiaId")
                        .IsRequired()
                        .HasConstraintName("FK_Pagos_MebresiaId_Membresias_MembresiaId");

                    b.HasOne("Numerito.API.Data.Entities.MetodosPago", "MetodoPago")
                        .WithMany("Pagos")
                        .HasForeignKey("MetodoPagoId")
                        .IsRequired()
                        .HasConstraintName("FK_Pagos_MetodoPagoId_MetodosPago_MetodoPagoId");

                    b.HasOne("Numerito.API.Data.Entities.Usuario", "Usuario")
                        .WithMany("Pagos")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK_Pagos_UsuarioCreacion_Usuarios_UsuarioId");

                    b.Navigation("Membresia");

                    b.Navigation("MetodoPago");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Numerito.API.Data.Entities.Usuario", b =>
                {
                    b.HasOne("Numerito.API.Data.Entities.Persona", "Persona")
                        .WithMany("Usuarios")
                        .HasForeignKey("PersonaId")
                        .IsRequired()
                        .HasConstraintName("FK_Usuarios_PersonaId_Personas_PersonaId");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Numerito.API.Data.Entities.Venta", b =>
                {
                    b.HasOne("Numerito.API.Data.Entities.MetodosPago", "MetodoPago")
                        .WithMany("Venta")
                        .HasForeignKey("MetodoPagoId")
                        .IsRequired()
                        .HasConstraintName("FK_Ventas_MetodoPagoId_MetodosPago_MetodoPagoId");

                    b.HasOne("Numerito.API.Data.Entities.Persona", "Persona")
                        .WithMany("Venta")
                        .HasForeignKey("PersonaId")
                        .IsRequired()
                        .HasConstraintName("FK_Ventas_PersonaId_Personas_PersonaId");

                    b.HasOne("Numerito.API.Data.Entities.Usuario", "UsuarioCreacionNavigation")
                        .WithMany("VentaUsuarioCreacionNavigations")
                        .HasForeignKey("UsuarioCreacion")
                        .IsRequired()
                        .HasConstraintName("FK_Ventas_UsuarioCreacion_Usuarios_UsuarioId");

                    b.HasOne("Numerito.API.Data.Entities.Usuario", "Usuario")
                        .WithMany("VentaUsuarios")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK_Ventas_UsuarioId_Usuarios_UsuarioId");

                    b.HasOne("Numerito.API.Data.Entities.Usuario", "UsuarioModificacionNavigation")
                        .WithMany("VentaUsuarioModificacionNavigations")
                        .HasForeignKey("UsuarioModificacion")
                        .HasConstraintName("FK_Ventas_UsuarioModificacion_Usuarios_UsuarioId");

                    b.Navigation("MetodoPago");

                    b.Navigation("Persona");

                    b.Navigation("Usuario");

                    b.Navigation("UsuarioCreacionNavigation");

                    b.Navigation("UsuarioModificacionNavigation");
                });

            modelBuilder.Entity("Numerito.API.Data.Entities.VentaDetalle", b =>
                {
                    b.HasOne("Numerito.API.Data.Entities.Venta", "Venta")
                        .WithMany("VentaDetalles")
                        .HasForeignKey("VentaId")
                        .IsRequired()
                        .HasConstraintName("FK_VentaDetalles_VentaId_Ventas_VentaId");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Numerito.API.Data.Entities.Membresia", b =>
                {
                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("Numerito.API.Data.Entities.MetodosPago", b =>
                {
                    b.Navigation("Pagos");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Numerito.API.Data.Entities.Persona", b =>
                {
                    b.Navigation("Usuarios");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Numerito.API.Data.Entities.Usuario", b =>
                {
                    b.Navigation("MembresiaUsuarioCreacionNavigations");

                    b.Navigation("MembresiaUsuarioModificacionNavigations");

                    b.Navigation("MetodosPagoUsuarioCreacionNavigations");

                    b.Navigation("MetodosPagoUsuarioModificacionNavigations");

                    b.Navigation("Pagos");

                    b.Navigation("VentaUsuarioCreacionNavigations");

                    b.Navigation("VentaUsuarioModificacionNavigations");

                    b.Navigation("VentaUsuarios");
                });

            modelBuilder.Entity("Numerito.API.Data.Entities.Venta", b =>
                {
                    b.Navigation("VentaDetalles");
                });
#pragma warning restore 612, 618
        }
    }
}
